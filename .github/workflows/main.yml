name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'
      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npm test
        env:
          CI: 'true'

  build_hub:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        if: github.branch == 'dev' || github.branch == 'master'
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build the Docker image
        run: docker build . --tag kwizapp/poster-service:latest
      - name: Push the Docker image to Docker Hub
        if: github.branch == 'dev' || github.branch == 'master'
        run: docker push kwizapp/poster-service

  build_heroku:
    runs-on: ubuntu-latest
    needs: test
    if: github.branch == 'dev' || github.branch == 'master'

    steps:
      - uses: actions/checkout@v2
      - name: Pull the latest image from Docker Hub
        run: docker pull kwizapp/poster-service:latest
      - uses: azure/docker-login@v1
        with:
          login-server: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}
      - name: Build the Docker image
        run: docker build . --cache-from kwizapp/poster-service:latest --tag registry.heroku.com/kwiz-poster-service/web
      - name: Push the Docker image to Heroku
        run: docker push registry.heroku.com/kwiz-poster-service/web

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build_heroku]
    if: github.branch == 'dev' || github.branch == 'master'

    steps:
      - name: Login to Heroku
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          args: container:login
      - name: Release the new version
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          args: container:release -a kwiz-poster-service web
